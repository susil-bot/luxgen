name: 🚀 Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  CACHE_VERSION: v1

jobs:
  # 🔍 Code Quality Checks
  quality-checks:
    name: 🔍 Code Quality & Security
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🔍 ESLint Check
        run: npm run lint

      - name: 🔧 ESLint Fix
        run: npm run lint:fix

      - name: 📝 TypeScript Check
        run: npm run type-check

      - name: 🔒 Security Audit
        run: npm audit --audit-level moderate

      - name: 📊 Bundle Analysis
        run: npm run build
        env:
          ANALYZE: true

  # 🧪 Testing
  testing:
    name: 🧪 Testing Suite
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🧪 Unit Tests
        run: npm test -- --coverage --watchAll=false

      - name: 🧪 E2E Tests
        run: npm run cypress:run
        env:
          CYPRESS_BASE_URL: http://localhost:3000

      - name: 📊 Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  # 🏗️ Build
  build:
    name: 🏗️ Build & Optimize
    runs-on: ubuntu-latest
    needs: [quality-checks, testing]
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🏗️ Build Application
        run: npm run build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          REACT_APP_ENVIRONMENT: production

      - name: 📊 Bundle Size Check
        run: |
          echo "Bundle size analysis:"
          du -sh build/static/js/*.js | sort -hr
          du -sh build/static/css/*.css | sort -hr

      - name: 📦 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: build/
          retention-days: 7

  # 🚀 Deploy Preview
  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: build/

      - name: 🚀 Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

  # 📊 Quality Report
  quality-report:
    name: 📊 Quality Report
    runs-on: ubuntu-latest
    needs: [quality-checks, testing, build]
    if: always()
    steps:
      - name: 📊 Generate Quality Report
        run: |
          echo "## 🎯 Quality Report" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Code Quality | ${{ needs.quality-checks.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Testing | ${{ needs.testing.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ needs.build.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
